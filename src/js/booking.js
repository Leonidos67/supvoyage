document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    const supItems = document.querySelectorAll('.sup-item');
    const bookingForm = document.getElementById('bookingForm');
    const startTab = document.getElementById('start');
    const backToCatalog = document.getElementById('backToCatalog');
    const selectedSupImage = document.getElementById('selectedSupImage');
    const timeOptions = document.querySelectorAll('.time-option');
    const bookingDetailsForm = document.getElementById('bookingDetails');
    const totalAmount = document.getElementById('totalAmount');
    const vestQuestion = document.getElementById('vestQuestion');
    const vestSelection = document.getElementById('vestSelection');
    const selectedVestsList = document.querySelector('#selectedVests .items-list');
    const phoneCaseBtn = document.getElementById('phoneCase');
    const successNotification = document.getElementById('successNotification');
    const closeSuccess = document.getElementById('closeSuccess');
    const userPhone = document.getElementById('userPhone');
    const userTelegram = document.getElementById('userTelegram');
    const supCountInput = document.getElementById('supCount');
    const supCountMinus = document.querySelector('#supCount ~ .minus');
    const supCountPlus = document.querySelector('#supCount ~ .plus');
    
    // –î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    let bookingData = {
        sup: null,
        supCount: 1,
        hours: null,
        price: 0,
        extras: {
            vests: [],
            phoneCase: false
        }
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ SUP
    supItems.forEach(item => {
        item.addEventListener('click', function() {
            const supId = this.getAttribute('data-id');
            const supImage = this.querySelector('img').src;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
            bookingData.sup = {
                id: supId,
                image: supImage
            };
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            selectedSupImage.src = supImage;
            
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Ñ–æ—Ä–º—É
            startTab.style.display = 'none';
            bookingForm.style.display = 'block';
        });
    });
    
    // –í–æ–∑–≤—Ä–∞—Ç –∫ –∫–∞—Ç–∞–ª–æ–≥—É
    backToCatalog.addEventListener('click', function() {
        bookingForm.style.display = 'none';
        startTab.style.display = 'block';
        resetForm();
    });
    
    // –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
    timeOptions.forEach(option => {
        option.addEventListener('click', function() {
            timeOptions.forEach(opt => opt.classList.remove('active'));
            this.classList.add('active');
            
            bookingData.hours = parseInt(this.getAttribute('data-hours'));
            bookingData.price = parseInt(this.getAttribute('data-price')) * bookingData.supCount;
            
            updateTotalPrice();
        });
    });
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–∞–ø–æ–≤
    supCountMinus.addEventListener('click', function() {
        if (bookingData.supCount > 1) {
            bookingData.supCount--;
            supCountInput.value = bookingData.supCount;
            updatePriceForCount();
        }
    });
    
    supCountPlus.addEventListener('click', function() {
        if (bookingData.supCount < 10) {
            bookingData.supCount++;
            supCountInput.value = bookingData.supCount;
            updatePriceForCount();
        }
    });
    
    supCountInput.addEventListener('change', function() {
        let value = parseInt(this.value) || 1;
        if (value < 1) value = 1;
        if (value > 10) value = 10;
        
        bookingData.supCount = value;
        this.value = value;
        updatePriceForCount();
    });
    
    // –ù—É–∂–µ–Ω –ª–∏ –∂–∏–ª–µ—Ç
    document.querySelectorAll('.toggle-option').forEach(option => {
        option.addEventListener('click', function() {
            document.querySelectorAll('.toggle-option').forEach(opt => opt.classList.remove('active'));
            this.classList.add('active');
            
            if (this.dataset.value === 'yes') {
                vestSelection.style.display = 'block';
            } else {
                vestSelection.style.display = 'none';
                resetVests();
            }
        });
    });
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∂–∏–ª–µ—Ç–æ–≤
    document.querySelectorAll('.vest-item').forEach(item => {
        const size = item.querySelector('.vest-count').dataset.size;
        const minusBtn = item.querySelector('.minus');
        const plusBtn = item.querySelector('.plus');
        const countElement = item.querySelector('.vest-count');
        
        minusBtn.addEventListener('click', function() {
            const currentCount = parseInt(countElement.textContent);
            if (currentCount > 0) {
                countElement.textContent = currentCount - 1;
                updateVestSelection(size, currentCount - 1);
            }
        });
        
        plusBtn.addEventListener('click', function() {
            const currentCount = parseInt(countElement.textContent);
            countElement.textContent = currentCount + 1;
            updateVestSelection(size, currentCount + 1);
        });
    });
    
    // –í—ã–±–æ—Ä —á–µ—Ö–ª–∞
    phoneCaseBtn.addEventListener('click', function() {
        bookingData.extras.phoneCase = !bookingData.extras.phoneCase;
        this.classList.toggle('active');
    });
    
    // –ó–∞–ø—Ä–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è +7 –∏ @
    userPhone.addEventListener('keydown', function(e) {
        // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ +7
        if ((e.key === 'Backspace' || e.key === 'Delete') && 
            this.selectionStart <= 2 && this.selectionEnd <= 2) {
            e.preventDefault();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    userPhone.addEventListener('focus', function() {
        if (this.value === '+7') {
            this.selectionStart = this.selectionEnd = 2; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –ø–æ—Å–ª–µ +7
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—è Telegram
    userTelegram.addEventListener('focus', function() {
        if (this.value === '@') {
            this.selectionStart = this.selectionEnd = 1; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –ø–æ—Å–ª–µ @
        }
    });
    
    userTelegram.addEventListener('keydown', function(e) {
        // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ @
        if ((e.key === 'Backspace' || e.key === 'Delete') && 
            this.selectionStart <= 1 && this.selectionEnd <= 1) {
            e.preventDefault();
        }
    });
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    userPhone.addEventListener('input', function(e) {
        // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ +7
        if (!this.value.startsWith('+7')) {
            this.value = '+7' + this.value.replace(/[^0-9]/g, '');
        }
        
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ +7
        let digits = this.value.replace(/[^0-9]/g, '');
        if (digits.length > 1) {
            this.value = '+7' + digits.substring(1, 11); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 10 —Ü–∏—Ñ—Ä–∞–º–∏ –ø–æ—Å–ª–µ +7
        } else {
            this.value = '+7';
        }
    });
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram
    userTelegram.addEventListener('input', function(e) {
        // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ @
        if (!this.value.startsWith('@')) {
            this.value = '@' + this.value.replace(/^@/, '');
        }
    });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    bookingDetailsForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
        if (!bookingData.sup || !bookingData.hours) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã');
            return;
        }
        
        const userName = document.getElementById('userName').value.trim();
        const userPhoneValue = userPhone.value;
        const userTelegramValue = userTelegram.value;
        
        if (!userName || userPhoneValue === '+7' || userTelegramValue === '@') {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        let message = `üèÑ *–ù–æ–≤–∞—è –±—Ä–æ–Ω—å SUP* üèÑ\n\n`;
        message += `*SUP:* ${bookingData.sup.id}\n`;
        message += `*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:* ${bookingData.supCount}\n`;
        message += `*–í—Ä–µ–º—è:* ${bookingData.hours} ${getHoursWord(bookingData.hours)}\n`;
        message += `*–°—É–º–º–∞:* ${bookingData.price} ‚ÇΩ\n\n`;
        message += `*–ö–ª–∏–µ–Ω—Ç:* ${userName}\n`;
        message += `*–¢–µ–ª–µ—Ñ–æ–Ω:* ${userPhoneValue}\n`;
        message += `*Telegram:* ${userTelegramValue}\n\n`;
        
        if (bookingData.extras.vests.length > 0) {
            message += `*–ñ–∏–ª–µ—Ç—ã:*\n`;
            bookingData.extras.vests.forEach(vest => {
                const sizeName = {
                    'child': '–î–µ—Ç—Å–∫–∏–π',
                    'medium': '–°—Ä–µ–¥–Ω–∏–π',
                    'adult': '–í–∑—Ä–æ—Å–ª—ã–π'
                }[vest.size];
                message += `- ${sizeName}: ${vest.count} —à—Ç.\n`;
            });
            message += `\n`;
        }
        
        if (bookingData.extras.phoneCase) {
            message += `*–ß–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* –î–∞\n`;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        sendToTelegram(message);
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    closeSuccess.addEventListener('click', function() {
        successNotification.style.display = 'none';
        resetForm();
    });
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–π —Ü–µ–Ω—ã
    function updateTotalPrice() {
        totalAmount.textContent = `${bookingData.price} ‚ÇΩ`;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∞–ø–æ–≤
    function updatePriceForCount() {
        const activeOption = document.querySelector('.time-option.active');
        if (activeOption) {
            bookingData.price = parseInt(activeOption.dataset.price) * bookingData.supCount;
            updateTotalPrice();
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∂–∏–ª–µ—Ç–æ–≤
    function updateVestSelection(size, count) {
        // –£–¥–∞–ª—è–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å
        bookingData.extras.vests = bookingData.extras.vests.filter(v => v.size !== size);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ > 0
        if (count > 0) {
            bookingData.extras.vests.push({
                size: size,
                count: count
            });
        }
        
        updateVestsList();
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∂–∏–ª–µ—Ç–æ–≤
    function updateVestsList() {
        selectedVestsList.innerHTML = '';
        
        bookingData.extras.vests.forEach(vest => {
            const sizeName = {
                'child': '–î–µ—Ç—Å–∫–∏–π',
                'medium': '–°—Ä–µ–¥–Ω–∏–π',
                'adult': '–í–∑—Ä–æ—Å–ª—ã–π'
            }[vest.size];
            
            const item = document.createElement('div');
            item.className = 'selected-item';
            item.innerHTML = `
                <span class="item-name">${sizeName} –∂–∏–ª–µ—Ç</span>
                <div class="item-actions">
                    <span class="item-count">${vest.count} —à—Ç.</span>
                    <button type="button" class="delete-item" data-size="${vest.size}">√ó</button>
                </div>
            `;
            
            item.querySelector('.delete-item').addEventListener('click', function() {
                const size = this.dataset.size;
                document.querySelector(`.vest-count[data-size="${size}"]`).textContent = '0';
                updateVestSelection(size, 0);
            });
            
            selectedVestsList.appendChild(item);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –≤—ã–±–æ—Ä–∞ –∂–∏–ª–µ—Ç–æ–≤
    function resetVests() {
        document.querySelectorAll('.vest-count').forEach(el => el.textContent = '0');
        bookingData.extras.vests = [];
        updateVestsList();
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    function sendToTelegram(message) {
        const token = '7914139182:AAHfGT-ckXITu6_DZNQtp0asA9_5yOCscqA';
        const chatId = '-4940315390';
        
        axios.post(`https://api.telegram.org/bot${token}/sendMessage`, {
            chat_id: chatId,
            text: message,
            parse_mode: 'Markdown'
        })
        .then(response => {
            showSuccessNotification();
        })
        .catch(error => {
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.');
            console.error('Telegram API error:', error);
        });
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    function showSuccessNotification() {
        successNotification.style.display = 'flex';
    }
    
    // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã
    function resetForm() {
        bookingDetailsForm.reset();
        timeOptions.forEach(opt => opt.classList.remove('active'));
        document.querySelectorAll('.vest-count').forEach(el => el.textContent = '0');
        phoneCaseBtn.classList.remove('active');
        document.querySelector('.toggle-option.no').classList.add('active');
        document.querySelector('.toggle-option.yes').classList.remove('active');
        vestSelection.style.display = 'none';
        
        bookingData = {
            sup: null,
            supCount: 1,
            hours: null,
            price: 0,
            extras: {
                vests: [],
                phoneCase: false
            }
        };
        
        totalAmount.textContent = '0 ‚ÇΩ';
        supCountInput.value = '1';
        userPhone.value = '+7';
        userTelegram.value = '@';
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è —á–∞—Å–æ–≤
    function getHoursWord(hours) {
        if (hours === 1) return '—á–∞—Å';
        if (hours >= 2 && hours <= 4) return '—á–∞—Å–∞';
        return '—á–∞—Å–æ–≤';
    }
});